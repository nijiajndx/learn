task(convert) {
	def source = new File('source.xml')
	def output = new File('output.txt')
	// Define input file
	inputs.file source
	// Define output file
	outputs.file output
	doLast {
		def xml = new XmlSlurper().parse(source)
		output.withPrintWriter { writer ->
			xml.person.each { person ->
			writer.println "${person.name},${person.email}"
		}
	}

	println "Converted ${source.name} to ${output.name}"
	}
}
// Get the file collection from
// the task outputs property.
def taskOutputFiles = files(convert)

task(printFiles,dependsOn:convert) <<{
	taskOutputFiles.each{ file->
		println file.name
	}
}

task 'collectionPath' (description:'collection file path') <<{
	def fileCollection = files('RAADME','INSTALL')
	println fileCollection.asPath
}